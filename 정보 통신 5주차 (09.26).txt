정보 통신 5주차 (09.26) **************************************************


LAN에서 통신하는 방법
유니캐스트 1:1
브로드캐스트 1:모두 (허브를 통해서 모두에게 보냄)
멀티캐스트 1: 특정 다수 (서버가 한 영역안에서 특정 그룹에게 데이터 전송)


유니 캐스트 
가장 많이 사용하는 통신 방식
수신지 주소(맥주소)를 통해 특정 컴퓨터에게만 전송
pc에서 aip테이블에 있는 해당 ip의 맥주소를 찾아 가는 방식

멀티 캐스트
유니 + 브로드 장점 결합함

유니캐스트

맥주소= 물리적 주소 48비트
16진수로 이루어짐
16진수는 자리당 4비트가 필요함
16진수는 0~15
ㄱ장 큰 수 15를 2진수로 나타내면 1111
16진수로 두자리씩
맨 앞부분의 24비트는 lan 칩셋 제조사를 의미하는 고유코드
랜의 업체의 고유 코드
뒤에 24비트는 일련번호 붙여감
전세계의 lan카드는 같을 수 없음


ip =논리적 주소


브로드 캐스트
1:모두이기 때문에 브로드 캐스트의 주소는 FF-FF-FF-FF-FF-FF로 미리 정해짐
마지막이 모두 1인것

192.168.11.0으로 ping 보내면 브로드 캐스트로 연결된 피시에게 모두 보냄


교과서 110

서버 입장에서 ?
브로드캐스트는 다른 라우터를 찾거나
라우터끼리 데이터를 교환하거나 서버가 서비스를 제공하려고
모든 클라이언트에게 알릴때 등 여러상황에서 사용 가능
불특정 다수에게 전송되는 서비스

예시 : 재난문자 (브로드, 멀티캐스트)

다른 영역에 있는 pc에게는
라우터를 통해 브로드 캐스트를 할 수 없음
왜냐면 마비 되니까


멀티캐스트
전송하려는 특정 그룹에게만 한 번에 전송할 수 있기 때문에
유니캐스트처럼 반복해서 보낼 필요가 없다.




전송방향에 따른 통신방식
	단방향 통신 simplex 한쪽으로만
	양방향 통신 duplex 양쪽으로
		전이중 통신 
		반이중 통신


단방향
송신, 수신 고정되어있음
통신 채널을 통해 접속된 단말기 2대 사이에서 한쪽방향으로 전송되는 방식
단방향일지라도 전송회로는 두개 필요

양방향
2대의 단말기 사이에서 송수신이 모두 가능
통수신 동시 가능 = 전이중
두대가 동시에 데이터 송수신 가능
채널 두개를 이용해 한 번에 데이터 송수신함.

송수신 번갈아 가며 가능 = 반이중
송신과 수신이 정해져 있지 않음
예시 : 휴대용 무전기
채널 하나 사용


교과서 114
직렬 전송
하나의 정보를 나타내는 각 데이터 비트를 직렬로 나열 한 후 (한줄로 감)
하나의 통신회선을 사용하여 순차적으로 1비트씩 송신하는 방식
수신측에서는 비트를 일정한 단위로 모아서 사용함
병렬에 비해 전송속도가 느림
원거리 데이터 전송에서는 통신 회선이 한 개만 필요함으로 경제적
************컴퓨터 내부에서는 주로 병렬 입출력을 함(속도가 빨라지기 때문에)
컴퓨터 외부에서는 직렬 입출력을 함. 외부에서 내부로 전송하고자 할때 전송방식 전환이 필요함
정보를 송신하고자 할때 내부에선 병렬 정보를 가지고 있다가 내보낼때 직렬 정보로 변환
외부에서 직렬 정보가 오면 병렬 정보로 변환하여 들어옴
동기식, 비동기식으로 전송 방식 구분 
한 비트 단위로 감
직렬 전송은 속도가 느려짐 
마우스와 키보드 직렬 *******************


병렬 전송
8개 비트
여러비트를 한 번에 송신함 -> 속도 빠름


115
동기식 전송
두 시스템 간에 컴퓨터의 속도 차이가 있기 때문에
송신 비트 시간 간격과 수신 비트 시간 간격이 정확히 일치하지 않음
송신이 빠르고 느리다면 두개를 맞추려고 함 = 동기화
두개의 노드 두개의 피시가 있다고 할때
왼쪽 피시는 현재 사용 피시
오른쪽 피시는 1990년대 피시
오른쪽에 데이터를 보내면 수신측에서 바로바로 처리 불가능
따라서 왼쪽에서 맞춰줘야함
보낸쪽에서 수신측에 속도 맞춰줌
두 시스템간에 속도차이가 존재함
시간 간격을 일치하지 않을 수가 있음
적절한 방법으로 송신측에서 전송한 데이터의 각 비트를 수신 측에서 정확히 수신할수 있도록 해야함 ==동기화
미리 정해진 수만큼 문자열을 한 묶음으로 만들어 일시에 전송하는 방법
0과 1의 문자열로 전송됨
문자나 바이트로 분리해 의미있는 데이터로 재구성함
동기식 전송에는 비트 단위로 동기화 시키는 비트 지향 동기화 기법과 *****8
문자 단위로 동기화 시키는 문자 지향 동기화 기법 있음


비트 지향 동기화 기법
비트 단위로 데이터 보냄
시작과 끝을 알리는 시작플래그로 시작해 종료플래그로 끝남
플래그등의 패턴을 구분하려고 '0'비트를 삽입함


문자 지향 동기화 기법
문자 단위로 데이터 보냄
앞에보다 뒤에가 더 속도가 빠름
맨앞에 SYN STX 데이터 ETX BCC



동기와 비동기의 차이점
동기식일때 첫 번째 함수가 완료될때까지 두번째 함수는 시작되지 않는다.
하나가 가고나서 처리되면 그 다음 것이 가는거임
앞에것이 갔는데 처리가 안됐으면 기다려야함 = 맞춰주는것
순차적 처리

비동기식은 여러작업을 동시에 처리가능
시가닝 오래 걸리는 작업을 효율적으로 처리 가능
코드의 복잡성이 증가할 수 있음
긴 데이터 비트열을 전송하고자 할때 한 문자씩 전송함으로써 수신기가 새로운 문자의 시작점에서 재동기하도록 하는 것임
문자의 시작을 알리는 시작 비트와
끝을 알리는 정지 비트 존재

오류 검출하는 패리티 비트(값에 따라 패리티 비트값 달라짐 1개수가 홀수, 짝수냐) + 정지비트 1 + 휴지 상태 11111111 + 시작비트 0 + 데이터 10101101

휴지 상태 = 동기화 되는 시간

전송하려는 정보 불규칙하게 발생할때 주로 사용함

120
통신 오류 검출
수신측에서 전송한 데이터는 송신측 데이터와 동일해야하지만
다양한 원인으로 오류가 발생할 수 있음
따라서 신뢰할 수 있는 네트워크 통신을 위해 오류를 검출, 수정해야함

오류의 종류
단일 비트 
비트들 중에서 하나가 오류가 난 경우
패리티비트가 오류난 데이터라고 판단 해줄 수 있음

다중 비트
두개 이상의 비연속적인 비트가 바뀐 경우
패리티 이용한 경우 찾을 수 없음
1의 개수가 2개 = 짝수개
수신측에서 받은 1이 4개 = 짝수개
패리티는 정상적으로 처리할거임

집단
2개이상 또는 그 이상의 연속적인 비트를 변경하는 오류


오류 검출 방법
송신측이 보내려는 데이터 외에 별도로 잉여분의 데이터를 추가해서 전송하면 수신측은 잉여 데이터를 검사해 오류를 검출할 수 있다.

오류 검출 방법의 종류
패리티 비트 검사
블록 합 검사
순환 중복 검사
CRC 검사


124
126
블록 합 검사 3-23
수평 패리티 방법을 
수직 패리티를 짝수 패리티 방식으로

아스키 코드를 쓰기 때문에 7비트 + 패리티 비트 1비트 = 8비트

패리티 비트는
1의 개수를 홀수개로 맞춰주기 위해
앞에 1의 개수에 따라 0이나 1이 온다.
1이 짝수개라면 1
1이 홀수개라면 0이 온다.


블록 합 검사
세로로 짝수 패리티
교과서 그림 참고

순환 중복 검사 (안함 -> 혼자 해보기)

================================================

126
인코딩
지금 현재는 통신 오류에서 말하는거임 !!
7비트 데이터가 0100111인 경우
짝수 패리티 방식 -> 0100111 에서 1이 4개므로 짝수이다.
실제 데이터 0100111을 00100111로 바꾼것을 인코딩이라고 한다.

디코딩
데이터 00100111에서 원래 데이터로 바꿔야 하는것
패리티 비트가 0이므로 1개수가 짝수인것으로 확인함
짝수 패리티 방식은 패리티 비트를 포함해 XOR연산을 사용
짝수일때 결과 = 0
홀수일때 결과 = 1 이 나와야함
0100111 값을 우리가 1의 개수가 홀수인지 짝수인지 세어서 0을 붙여줌
이것이 맞는지 틀린지 물어봤을때 1의 개수를 세어봄
짝수인지 홀수인지 세어서 맞다 아니다를 판단함
하지만 컴퓨터는 그렇게 계산하지 않음 -> XOR 연산을 함


136
매체 접근 방식 ******************************************************************
데이터 충돌을 방지하려고 LAN에 연결된 모든 장치는 정의된 규칙에 따라 접근함
이를 매체 접근 제어라고 함.
메체접근 방식
	경쟁 방식 (서로간에 경쟁한다. 먼저 보내는 놈이 송신할 수 있음.)
		CSMA/CD
	토큰 제어 방식 (링형 토큰, 토큰 가진애 송신을 할 수 있는 권한 있음)
		토큰버스 방식 (버스형 = 버스 손잡이처럼 생김)
		토큰링 방식


CSMA/CD 방식
버스형 통신망으로 알려진 이더넷에서 주로 사용
동축 케이블에 연결된 컴퓨터의 단말을 서로 접속시키는 방식
전송매체 컴퓨터로 공유하고있음
데이터를 송신하기전에 반송파 여부 감지함 (반송파를 보내봄 -> 반송파가 감지되면 다른 컴퓨터에서 데이터를 송신중임을 판단하며 데이터를 전송하지 않음
반송파 감지ㅏㄱ 안되면 컴퓨터가 전송매체 사용안함으로 판단 -> 데이터 전송함

잼 신호
다른 컴퓨터에게 데이터를 전송하지 말아야 한다는 것을 알리기 위해 어느 한 컴퓨터에서 전송한것



토큰제어 방식

토큰링 방식
링을 따라 순환하는 토큰을 이용한 것
데이터를 전송하려는 컴퓨터는 이 프리 토큰이 자신에게 올때까지 대기해야한다.
컴퓨터마다 전송 기회가 공평히 주어짐
전송 권한을 얻는 대기시간이 정해져 있어 과부화가 일어나도 성능 저하는 심하지 않다.
CSMA/CD 방식보다 실시간 처리가 요구되는 분야에 적합하다.


전송된 패킷은 동축 케이블에 연결된 컴퓨터들을 거쳐 패킷을 처음 전송한 컴퓨터에게 다시 도착
패킷을 처음 전송한 컴퓨터는 자시닝 이전에 전송한 패킷을 수신함 = 다 보내졌다는 뜻
확인 후 토큰을 다음 컴퓨터로 전송


토큰버스 방식
이더넷과 토큰링의 특징을 합친 형태
실시간으로 처리해야하는 공장자동화에 많이 응용됨
물리적으로는 버스형 접속 형태(경쟁 방식)를 띠고 있지만 버스의 모든 컴퓨터는 논리적으로 링형 접속 형태를 띤다. = 버스형에서 토큰을 이용한다 = 데이터 충돌 하지 않는다.


148
교환 통신망
여러개의 통신 회선의 중간에서 각각의 노드들이 전송하는 데이터를 원하는 곳으로 전송해주는 방법
회선 교환 회선 자체를 교환
메시지 교환 전송되는 데이터를 메시지 단위로 교환
패킷 교환 패킷 단위로 교환



회선 교환망 (아날로그 통신)
회선을 독립적으로 사용 가능
물리적 회선을 꼈다 뺐다 하며 통화하는 사람들을 연결하는 방식
독립적 회선을 구축해야 하므로 설치 비용 증가
한 회선이 처리할 수 있는 데이터 양 감소
보안성 좋음 = 전용성이 구축되어지기 때문
데이터 실시간 처리, 대량 데이터 전송시 적합
한 회선 지속적으로 점유 => 네트워크 효율 낮음



메시지 교환망 (데이터 통신 = 디지털 통신)
회선 교환의 비효율적인 회선 이용을 개선시킨 데이터 통신 교환 방식
가변 길이의 메시지 단위로 저장 전송 방식에 따라 데이터를 교환함
데이터를 저장해뒀다가 정해진 양만큼 모이면 보냄 =한번에 보내지는거 아님
데이터가 보내지는데 용량의 크기가 한번에 전달이 되어지면 넘겨줘도 되지만
속도가 느리니 데이터를 저장시켜뒀다가 일정량 모이면 전송
또 데이터를 모아서 일정량이 되면 보냄
축적 전송
왜 모아서 보내는가 ? = 적은 데이터가 저 선로를 타고 간다면 계속 쓴다는 뜻 1번에서 4번으로
데이터가 조금씩 가고 있는데 2번에서 4번 못감 그래서 데이터를 저장해뒀다가 보내는거
도착한 메시지를 일단 저장후 다음 노드로 가는 링크가 비어있으면 전송함


패킷 교환망 (디지털 통신)
데이터를 작은 패킷 단위로 나눠서 목적지까지 전달
여러개의 패킷들이 공존함
패킷 안에는 목적지의 주소 정보 내장

다음시간에 OSI모델 




















